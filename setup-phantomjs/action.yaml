name: 'Install PhantomJS if shinytest is a direct dependency'
description: 'Installs PhantomJS if shinytest (or webdriver) is found in the `DESCRIPTION` file. If `shinytest` is not directly used, then PhantomJS is not installed'
author: 'Barret Schloerke'
inputs:
  cache-version:
    default: "1"
    description: Value to be inserted into the cache key
    required: false
runs:
  using: "composite"
  steps:
    - name: Install PhantomJS group
      shell: Rscript {0}
      run: |
        cat("::group::Install PhantomJS\n")
    - name: Find PhantomJS path
      id: phantomjs
      shell: Rscript {0}
      # `if` statements are not allowed in composite actions. So use a dummy location if shinytest (or webdriver) can not be directly found in the `DESCRIPTION` file
      run: |
        phantom_path <- NULL
        if (file.exists("DESCRIPTION")) {
          desc_lines <- paste0(readLines("DESCRIPTION"), collapse = "\n")
          shinytest_in_desc <- grepl("\\bshinytest\\b", desc_lines)
          webdriver_in_desc <- grepl("\\bwebdriver\\b", desc_lines)
          if (shinytest_in_desc || webdriver_in_desc) {
            # Only install if there is a direct dependency to shinytest
            pkg_name <- as.list(read.dcf("DESCRIPTION")[1,])$Package
            if (identical(pkg_name, "shinytest") || identical(pkg_name, "webdriver")) {
              # Install the package to install phantom or run tests in background session
              # The dependencies should have already been installed by now. This should be _fast_
              pak::local_install(".")
            } else if (shinytest_in_desc) {
              # Install the {shinytest} to be able to run shinytest tests in background R session
              # The dependencies should have already been installed by now. This should be _fast_
              pak::pkg_install("any::shinytest")
            }
            phantom_path <-
              if (require("shinytest", quietly = TRUE)) {
                phantom_path <- shinytest:::phantom_paths()[[1]]
              } else if (require("webdriver", quietly = TRUE)) {
                phantom_path <- webdriver:::find_phantom()
              } else {
                NULL
              }
          }
        }
        if (!is.null(phantom_path)) {
          cat("path=", phantom_path, "\n", file = Sys.getenv("GITHUB_OUTPUT"), sep = "", append = TRUE)
          cat("should-install=true", file = Sys.getenv("GITHUB_OUTPUT"), append = TRUE)
        } else {
          cat("path=/tmp/phantomjs-not-found\n", file = Sys.getenv("GITHUB_OUTPUT"), sep = "", append = TRUE)
          cat("should-install=false", file = Sys.getenv("GITHUB_OUTPUT"), append = TRUE)
        }
    - name: Restore PhantomJS cache
      if: ${{ steps.phantomjs.outputs.should-install == 'true' }}
      uses: actions/cache/restore@v4
      with:
        path: ${{ steps.phantomjs.outputs.path }}
        key: ${{ runner.os }}-phantomjs-${{ inputs.cache-version }}
        # Restore from `save` cache if regular cache is not found
        restore-keys: |
          ${{ runner.os }}-phantomjs-save-${{ inputs.cache-version }}

    - name: Install PhantomJS
      if: ${{ steps.phantomjs.outputs.should-install == 'true' }}
      shell: Rscript {0}
      run: |
        if (file.exists("DESCRIPTION")) {
          desc_lines <- paste0(readLines("DESCRIPTION"), collapse = "\n")
          # Install phantom only if 'shinytest' is found in DESCRIPTION file
          if (require("shinytest", quietly = TRUE) && grepl("\\bshinytest\\b", desc_lines)) {
            if (!shinytest::dependenciesInstalled()) {
              shinytest::installDependencies()
            }
            stopifnot(shinytest::dependenciesInstalled())
          } else if (require("webdriver", quietly = TRUE) && grepl("\\bwebdriver\\b", desc_lines)) {
            if (is.null(webdriver:::find_phantom())) {
              webdriver::install_phantomjs()
            }
            if (is.null(webdriver:::find_phantom())) {
              stop("Can not find webdriver phantomJS installation")
            }
          }
        }

    - name: Save PhantomJS cache
      if: ${{ steps.phantomjs.outputs.should-install == 'true' }}
      uses: actions/cache/save@v4
      with:
        path: ${{ steps.phantomjs.outputs.path }}
        key: ${{ runner.os }}-phantomjs-${{ inputs.cache-version }}

    - name: End Install PhantomJS group
      shell: Rscript {0}
      run: |
        cat("::endgroup::\n")
