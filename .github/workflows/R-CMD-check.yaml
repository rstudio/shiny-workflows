on:
  workflow_call:
    inputs:
      extra-packages:
        type: string
        default: ""
        required: false
      cache-version:
        type: string
        default: "2"
        required: false
      pandoc-version:
        type: string
        default: "2.7.3"
        required: false
      extra-check-args:
        type: string
        # default: '"--run-donttest", "--no-manual", "--as-cran"'
        default: 'NULL'
        required: false
      macOS:
        type: string
        default: "macOS-latest"
        required: false
      windows:
        type: string
        default: "windows-latest"
        required: false
      ubuntu:
        type: string
        required: false
        # To test more versions, they must be separated by a space. Ex: `"ubuntu-18.04 ubuntu-20.04`
        default: "ubuntu-18.04"
      minimum-r-version:
        type: string
        required: false
        default: ""

name: R-CMD-check

jobs:
  setup:
    name: setup
    runs-on: ubuntu-latest
    outputs:
      config: ${{ steps.config.outputs.config }}
    steps:
    - { name: devel,    id: devel,    uses: r-lib/actions/setup-r@v2, with: { r-version: devel,    install-r: false } }
    - { name: release,  id: release,  uses: r-lib/actions/setup-r@v2, with: { r-version: release,  install-r: false } }
    - { name: oldrel-1, id: oldrel-1, uses: r-lib/actions/setup-r@v2, with: { r-version: oldrel-1, install-r: false } }
    - { name: oldrel-2, id: oldrel-2, uses: r-lib/actions/setup-r@v2, with: { r-version: oldrel-2, install-r: false } }
    - { name: oldrel-3, id: oldrel-3, uses: r-lib/actions/setup-r@v2, with: { r-version: oldrel-3, install-r: false } }
    - { name: oldrel-4, id: oldrel-4, uses: r-lib/actions/setup-r@v2, with: { r-version: oldrel-4, install-r: false } }

    - name: Checkout GitHub repo
      uses: rstudio/shiny-workflows/.github/internal/checkout@v1

    # R is a pre-installed software
    - name: Config
      id: config
      shell: Rscript {0}
      run: |
        mac <- "${{ inputs.macOS }}"
        windows <- "${{ inputs.windows }}"
        ubuntu <- strsplit("${{ inputs.ubuntu }}", "[[:space:],]+")[[1]]
        has_src <- dir.exists("src")
        min_r_ver <- "${{ inputs.minimum-r-version }}"

        rver <- list(
          devel   = "${{ steps.devel.outputs.installed-r-version }}",
          release = "${{ steps.release.outputs.installed-r-version }}",
          oldrel1 = "${{ steps.oldrel-1.outputs.installed-r-version }}",
          oldrel2 = "${{ steps.oldrel-2.outputs.installed-r-version }}",
          oldrel3 = "${{ steps.oldrel-3.outputs.installed-r-version }}",
          oldrel4 = "${{ steps.oldrel-4.outputs.installed-r-version }}"
        )
        job <- function(os, r, ...) {
          list(os = os, r = r, ...)
        }
        is_valid_os <- function(os, r_ver = "") {
          if (identical(os, "false")) return(FALSE)
          if (identical(os, "")) return(FALSE)
          if (any(nchar(c(r_ver, min_r_ver)) == 0)) return(TRUE)
          r_ver >= min_r_ver
        }
        config <- c(
          list(
            if (is_valid_os(mac,     rver$release))     job(mac, rver$release),
            if (has_src && is_valid_os(windows, rver$release)) job(windows, "devel"),
            if (is_valid_os(windows, rver$release))     job(windows, rver$release),
            if (has_src && is_valid_os(windows, "3.6")) job(windows, "3.6"),
            if (is_valid_os(ubuntu,  rver$devel))       job(ubuntu[[1]], rver$devel, "http-user-agent" = "release")
          ),
          if (is_valid_os(ubuntu))
            unlist(recursive = FALSE, lapply(ubuntu, function(ubuntu_) {
              list(
                if (is_valid_os(ubuntu_, rver$release)) job(ubuntu_, rver$release),
                if (is_valid_os(ubuntu_, rver$oldrel1)) job(ubuntu_, rver$oldrel1),
                if (is_valid_os(ubuntu_, rver$oldrel2)) job(ubuntu_, rver$oldrel2),
                if (is_valid_os(ubuntu_, rver$oldrel3)) job(ubuntu_, rver$oldrel3),
                if (is_valid_os(ubuntu_, rver$oldrel4)) job(ubuntu_, rver$oldrel4)
              )
            }))
        )
        ## Drop NULLs
        config <- config[!vapply(config, is.null, logical(1))]
        ## Convert to JSON manually to save 10s installing `jsonlite`
        join_and_wrap <- function(x, start, end, sep = ",") {
          paste0(start, paste0(x, collapse = sep), end)
        }
        entries_json <- vapply(config, character(1), FUN = function(entry) {
          join_and_wrap(
            paste0("\"", names(entry), "\":\"", unname(entry), "\""),
            "{", "}"
          )
        })
        config_json <- join_and_wrap(entries_json, "[", "]")
        cat("Config:\n", config_json, "\n", sep = "")
        cat("::set-output name=config::", config_json, "\n", sep = "")

  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    needs: [setup]
    strategy:
      fail-fast: false
      matrix:
        config: ${{ fromJSON(needs.setup.outputs.config) }}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout GitHub repo
        uses: rstudio/shiny-workflows/.github/internal/checkout@v1

      - name: Install R, system dependencies, and package dependencies
        uses: rstudio/shiny-workflows/setup-r-package@v1
        with:
          pandoc-version: ${{ inputs.pandoc-version }}
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          cache-version: ${{ inputs.cache-version }}
          needs: check
          extra-packages: |
            any::rcmdcheck
            ${{ inputs.extra-packages }}

      - name: Check package
        uses: r-lib/actions/check-r-package@v2
        with:
          check-dir: '"check"' # matches directory below
          args: 'c(${{ inputs.extra-check-args }}, "--no-manual", "--as-cran")'

      - name: "Show `testthat` output"
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash
      - name: "Upload 'Check package' results"
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ matrix.config.os }}-r${{ matrix.config.r }}-results
          path: "check"
